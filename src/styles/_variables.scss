$families: (
  headings: ('Roboto Slab', Helvetica, Arial, sans-serif),
  body: ('proxima-nova', Helvetica, Arial, sans-serif),
);

@function family($variant) {
  @return map-get($families, $variant);
}

$weights: (
  heading: 400,
  heading-logo: 700,
  body: 400,
  body-bold: 700,
  body-huge: 900,
  body-text-icon: 700,
);

@function weight($variant) {
  @return map-get($weights, $variant);
}

$sizes-bases: (
  desktop: 16px,
  mobile: 14px
);

$colors: (
  body-text: black,
  accent: #EFD352,
  brand-shopify: #95BF47,
);

@function color($variant) {
  @return map-get($colors, $variant);
}

$text-opacities: (
  base: 0.8,
  strong: 0.6
);

@function text-opacity($variant: 'base') {
  @return map-get($text-opacities, $variant);
}

@function color-body-text-subdued($level: 'base') {
  @return rgba(color(body-text), text-opacity($level));
}

$durations: (
  fast: 0.15s,
  slower: 0.25s,
  slow: 1s
);

$easings: (
  base: ease,
);

@function duration($varaint: 'fast') {
  @return map-get($durations, $varaint);
}

@function easing($varaint: 'base') {
  @return map-get($easings, $varaint);
}

@function transition($property, $duration: 'fast') {
  @return $property duration($duration) easing();
}

$spacings: (
  base: 1.5rem,
  tight: 1rem,
  extra-tight: 0.75rem
);

@function spacing($variant: 'base') {
  @return map-get($spacings, $variant);
}

@function strip-unit($number) {
  @if type-of($number) == 'number' and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }

  @return $number;
}

@function rem($px) {
  @return #{strip-unit($px) / strip-unit(map-get($sizes-bases, desktop))}rem;
}

@mixin page-loading {
  .wf-loading & {
    @content;
  }
}

@mixin page-loaded {
  .wf-active & {
    @content;
  }
}

@mixin breakpoint-tablet-max {
  @media all and (max-width: 764px) {
    @content;
  }
}
